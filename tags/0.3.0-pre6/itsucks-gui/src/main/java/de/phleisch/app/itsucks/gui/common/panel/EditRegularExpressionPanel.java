/*
 * EditRegularExpression2Panel.java
 *
 * Created on __DATE__, __TIME__
 */

package de.phleisch.app.itsucks.gui.common.panel;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;

import javax.swing.JOptionPane;

/**
 *
 * @author  __USER__
 */
public class EditRegularExpressionPanel extends javax.swing.JPanel {

	private static final long serialVersionUID = -3119407899490219128L;

	/** Creates new form EditRegularExpression2Panel */
	public EditRegularExpressionPanel() {
		initComponents();

		try {
			StringBuffer helpText = loadHelpText();
			this.docuLabel.setText(helpText.toString());
		} catch (IOException e) {
			this.docuLabel.setText("Error loading help!");
		}
	}

	private StringBuffer loadHelpText() throws IOException {
		StringBuffer text = new StringBuffer();

		InputStream resourceAsStream = getClass().getClassLoader()
				.getResourceAsStream("RegularExpressionHelp.html");
		if (resourceAsStream == null) {
			text.append("Error loading help text!");
			return text;
		}

		InputStreamReader reader = new InputStreamReader(resourceAsStream);

		char buffer[] = new char[1024];
		while (reader.ready()) {
			int read = reader.read(buffer);
			text.append(buffer, 0, read);
		}
		reader.close();
		return text;
	}

	public String getRegularExpression() {
		return this.regularExpressionTextArea.getText();
	}

	public void setRegularExpression(String pExpression) {
		this.regularExpressionTextArea.setText(pExpression);
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc=" Generated Code ">
	private void initComponents() {
		matchingButtonGroup = new javax.swing.ButtonGroup();
		regularExpressionLabel = new javax.swing.JLabel();
		regularExpressionScrollPane = new javax.swing.JScrollPane();
		regularExpressionTextArea = new javax.swing.JTextArea();
		testTextLabel = new javax.swing.JLabel();
		testTextScrollPane = new javax.swing.JScrollPane();
		testTextTextArea = new javax.swing.JTextArea();
		partialMatchRadioButton = new javax.swing.JRadioButton();
		fullMatchRadioButton = new javax.swing.JRadioButton();
		testButton = new javax.swing.JButton();
		resultLabel = new javax.swing.JLabel();
		matchResultLabel = new javax.swing.JLabel();
		docuScrollPane = new javax.swing.JScrollPane();
		docuLabel = new javax.swing.JLabel();

		regularExpressionLabel.setText("Regular Expression:");

		regularExpressionTextArea.setColumns(20);
		regularExpressionTextArea.setLineWrap(true);
		regularExpressionTextArea.setRows(5);
		regularExpressionScrollPane.setViewportView(regularExpressionTextArea);

		testTextLabel.setText("Test text for regular expression:");

		testTextTextArea.setColumns(20);
		testTextTextArea.setLineWrap(true);
		testTextTextArea.setRows(5);
		testTextScrollPane.setViewportView(testTextTextArea);

		matchingButtonGroup.add(partialMatchRadioButton);
		partialMatchRadioButton.setSelected(true);
		partialMatchRadioButton.setText("Partial match");
		partialMatchRadioButton.setBorder(javax.swing.BorderFactory
				.createEmptyBorder(0, 0, 0, 0));
		partialMatchRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));

		matchingButtonGroup.add(fullMatchRadioButton);
		fullMatchRadioButton.setText("Full match");
		fullMatchRadioButton.setBorder(javax.swing.BorderFactory
				.createEmptyBorder(0, 0, 0, 0));
		fullMatchRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));

		testButton.setText("Test it");
		testButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				testButtonActionPerformed(evt);
			}
		});

		resultLabel.setText("Result:");

		matchResultLabel.setText(" ");

		docuLabel.setFont(new java.awt.Font("Dialog", 0, 10));
		docuLabel.setText("Docu");
		docuScrollPane.setViewportView(docuLabel);

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
				this);
		this.setLayout(layout);
		layout
				.setHorizontalGroup(layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								layout
										.createSequentialGroup()
										.addContainerGap()
										.add(
												layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.LEADING)
														.add(
																testTextLabel,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																437,
																Short.MAX_VALUE)
														.add(
																layout
																		.createSequentialGroup()
																		.add(
																				layout
																						.createParallelGroup(
																								org.jdesktop.layout.GroupLayout.LEADING)
																						.add(
																								fullMatchRadioButton)
																						.add(
																								partialMatchRadioButton))
																		.add(
																				42,
																				42,
																				42)
																		.add(
																				testButton,
																				org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																				126,
																				org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED)
																		.add(
																				resultLabel,
																				org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																				56,
																				org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED)
																		.add(
																				matchResultLabel,
																				org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																				47,
																				org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
														.add(
																org.jdesktop.layout.GroupLayout.TRAILING,
																layout
																		.createSequentialGroup()
																		.add(
																				regularExpressionLabel,
																				org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																				437,
																				Short.MAX_VALUE)
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED))
														.add(
																regularExpressionScrollPane,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																437,
																Short.MAX_VALUE)
														.add(
																testTextScrollPane,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																437,
																Short.MAX_VALUE))
										.add(23, 23, 23)
										.add(
												docuScrollPane,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												420, Short.MAX_VALUE)
										.addContainerGap()));
		layout
				.setVerticalGroup(layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								layout
										.createSequentialGroup()
										.addContainerGap()
										.add(
												layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.LEADING)
														.add(
																layout
																		.createSequentialGroup()
																		.add(
																				docuScrollPane,
																				org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																				275,
																				Short.MAX_VALUE)
																		.addContainerGap())
														.add(
																layout
																		.createSequentialGroup()
																		.add(
																				regularExpressionLabel)
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED)
																		.add(
																				regularExpressionScrollPane,
																				org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																				83,
																				Short.MAX_VALUE)
																		.add(
																				27,
																				27,
																				27)
																		.add(
																				testTextLabel)
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED)
																		.add(
																				testTextScrollPane)
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED)
																		.add(
																				layout
																						.createParallelGroup(
																								org.jdesktop.layout.GroupLayout.TRAILING)
																						.add(
																								layout
																										.createSequentialGroup()
																										.add(
																												layout
																														.createParallelGroup(
																																org.jdesktop.layout.GroupLayout.BASELINE)
																														.add(
																																testButton)
																														.add(
																																resultLabel)
																														.add(
																																matchResultLabel,
																																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																																28,
																																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
																										.add(
																												3,
																												3,
																												3))
																						.add(
																								layout
																										.createSequentialGroup()
																										.add(
																												partialMatchRadioButton)
																										.addPreferredGap(
																												org.jdesktop.layout.LayoutStyle.RELATED)
																										.add(
																												fullMatchRadioButton)))
																		.add(
																				15,
																				15,
																				15)))));
	}// </editor-fold>//GEN-END:initComponents

	//GEN-FIRST:event_testButtonActionPerformed
	private void testButtonActionPerformed(java.awt.event.ActionEvent evt) {

		String regExp = this.regularExpressionTextArea.getText();
		String testText = this.testTextTextArea.getText();

		Pattern pattern = null;
		try {
			pattern = Pattern.compile(regExp, Pattern.CASE_INSENSITIVE);
		} catch (PatternSyntaxException ex) {
			JOptionPane.showMessageDialog(null, ex.getMessage(),
					"Regular expression error", JOptionPane.ERROR_MESSAGE);
			return;
		}

		Matcher m = pattern.matcher(testText);

		boolean result = false;
		if (this.partialMatchRadioButton.isSelected()) {
			result = m.find();
		} else if (this.fullMatchRadioButton.isSelected()) {
			result = m.matches();
		}

		if (result) {
			this.matchResultLabel
					.setText("<html><font color=\"green\">match</font></html>");
		} else {
			this.matchResultLabel
					.setText("<html><font color=\"red\">no match</font></html>");
		}
	}//GEN-LAST:event_testButtonActionPerformed

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JLabel docuLabel;
	private javax.swing.JScrollPane docuScrollPane;
	private javax.swing.JRadioButton fullMatchRadioButton;
	private javax.swing.JLabel matchResultLabel;
	private javax.swing.ButtonGroup matchingButtonGroup;
	private javax.swing.JRadioButton partialMatchRadioButton;
	private javax.swing.JLabel regularExpressionLabel;
	private javax.swing.JScrollPane regularExpressionScrollPane;
	private javax.swing.JTextArea regularExpressionTextArea;
	private javax.swing.JLabel resultLabel;
	private javax.swing.JButton testButton;
	private javax.swing.JLabel testTextLabel;
	private javax.swing.JScrollPane testTextScrollPane;
	private javax.swing.JTextArea testTextTextArea;
	// End of variables declaration//GEN-END:variables


}