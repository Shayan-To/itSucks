/*
 * EditDownloadJobTreeDialog.java
 *
 * Created on 27. April 2008, 19:25
 */

package de.phleisch.app.itsucks.gui.job;

import java.io.File;

import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

import de.phleisch.app.itsucks.gui.job.panel.DownloadJobBasicPanel;
import de.phleisch.app.itsucks.job.download.DownloadJob;
import de.phleisch.app.itsucks.persistence.SerializableJobPackage;

/**
 *
 * @author  olli
 */
public class EditDownloadJobTreeDialog extends javax.swing.JDialog {
    
	private static final long serialVersionUID = -3441346245316972387L;
	
	/** Creates new form EditDownloadJobTreeDialog */
    public EditDownloadJobTreeDialog() {
        initComponents();
        registerTreeNodes();
    }
    
    protected void registerTreeNodes() {
		
    	DefaultMutableTreeNode root = new DefaultMutableTreeNode("Bla");
    	
    	DefaultMutableTreeNode connectionSettings = new DefaultMutableTreeNode();
    	connectionSettings.setUserObject("Connection Settings");
    	root.add(connectionSettings);
    	
    	DefaultMutableTreeNode proxySettings = new DefaultMutableTreeNode();
    	proxySettings.setUserObject("Proxy");
    	connectionSettings.add(proxySettings);
    	
    	DefaultTreeModel model = new DefaultTreeModel(root);
    	tree.setModel(model);
//    	model.setRoot();
    	
//    	model.
    	
    	this.panelArea.add(new DownloadJobBasicPanel());
    	
	}

	/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        startButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        panelArea = new javax.swing.JPanel();

        setMinimumSize(new java.awt.Dimension(633, 750));

        startButton.setText("Start download");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(startButton);

        saveButton.setText("Save as template");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(saveButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelButton);

        tree.setBorder(null);
        tree.setAutoscrolls(true);
        tree.setToggleClickCount(1);
        jScrollPane1.setViewportView(tree);

        panelArea.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        panelArea.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        SerializableJobPackage job = null;//this.editDownloadJobGroupPanel.buildJob();
        if (job == null)
            return;
        
        boolean savePathOk = true;
        DownloadJob downloadJob = (DownloadJob) job.getJobs().get(0);
        File path = downloadJob.getSavePath();
        if (!path.exists()) {
            
            int result = JOptionPane.showConfirmDialog(this, "The save path does not exists. " +
                    "Should it be created?",
                    "Create save path?", JOptionPane.YES_NO_OPTION);
            
            if(result == JOptionPane.YES_OPTION) {
                boolean success = path.mkdirs();
                if(!success) {
                    JOptionPane.showMessageDialog(this, "The save path could not be created!",
                            "Error", JOptionPane.ERROR_MESSAGE);
                    savePathOk = false;
                }
                
            } else {
                savePathOk = false;
            }
            
        }
        
        if (savePathOk && !path.canWrite()) {
            
            JOptionPane.showMessageDialog(this, "The save path is not writable!",
                    "Error", JOptionPane.ERROR_MESSAGE);
            
            savePathOk = false;
        }
        
        if(!savePathOk) {
            return;
        }
        
        //mDownloadJobManager.addDownload(job);
        
        this.dispose();
    }//GEN-LAST:event_startButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        //saveDownloadTemplate();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelArea;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton startButton;
    private javax.swing.JTree tree;
    // End of variables declaration//GEN-END:variables
    
}
