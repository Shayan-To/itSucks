/*
 * QueueDownloadJobOverview.java
 *
 * Created on __DATE__, __TIME__
 */

package de.phleisch.app.itsucks.gui2.panel;

import java.util.HashSet;
import java.util.Observable;
import java.util.Observer;

import de.phleisch.app.itsucks.DispatcherThread;
import de.phleisch.app.itsucks.JobList;
import de.phleisch.app.itsucks.JobListNotification;
import de.phleisch.app.itsucks.io.DownloadJob;

/**
 *
 * @author  __USER__
 */
public class DownloadJobQueueOverviewPanel extends javax.swing.JPanel {

	private static final long serialVersionUID = 2406761069696757338L;
	private DispatcherThread mJobDispatcher;
	private JobListObserver mJobListObserver = new JobListObserver();
	private HashSet<DownloadJob> mJobs = new HashSet<DownloadJob>();
	
	/** Creates new form QueueDownloadJobOverview */
	public DownloadJobQueueOverviewPanel() {
		initComponents();
	}

	public void setDispatcher(DispatcherThread pDispatcher) {
		mJobDispatcher = pDispatcher;

		mJobDispatcher.getJobManager().getJobList().addObserver(
				mJobListObserver);
	}

	public DispatcherThread getDispatcher() {
		return mJobDispatcher;
	}

	public void removeDispatcher() {
		mJobDispatcher.getJobManager().getJobList().deleteObserver(
				mJobListObserver);
		//		mDownloadStatusTableModel.removeAllDownloadJobs();
		//		mDownloadStatusTableModel.stop();
		mJobDispatcher = null;
	}
	
	private void addDownloadJob(DownloadJob pJob) {
		// TODO Auto-generated method stub
		
	}
	
	private void removeDownloadJob(DownloadJob pJob) {
		// TODO Auto-generated method stub
		
	}
	
	//private void moveDownloadJob(DownloadJob)

	private DownloadJobStatusTablePanel[] getPanelsForState(DownloadJob pJob) {
		
		
		
		//TODO
		return null;
	}

	private class JobListObserver implements Observer {

		public void update(Observable pO, Object pArg) {
			JobListNotification notification = (JobListNotification) pArg;

			if (notification.message == JobList.NOTIFICATION_JOB_ADDED) {
				DownloadJob job = (DownloadJob) notification.affectedJob;

				if (job.getState() != DownloadJob.STATE_ALREADY_PROCESSED) {
					addDownloadJob(job);
				}
			} else if (notification.message == JobList.NOTIFICATION_JOB_REMOVED) {
				DownloadJob job = (DownloadJob) notification.affectedJob;
				removeDownloadJob(job);
			}
		}

	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc=" Generated Code ">
	private void initComponents() {
		jTabbedPane1 = new javax.swing.JTabbedPane();
		downloadJobStatusTableAllPanel = new de.phleisch.app.itsucks.gui2.panel.DownloadJobStatusTablePanel();
		downloadJobStatusTableRunningPanel = new de.phleisch.app.itsucks.gui2.panel.DownloadJobStatusTablePanel();
		downloadJobStatusTableOpenPanel = new de.phleisch.app.itsucks.gui2.panel.DownloadJobStatusTablePanel();
		downloadJobStatusTableFinishedPanel = new de.phleisch.app.itsucks.gui2.panel.DownloadJobStatusTablePanel();
		infoPanel = new javax.swing.JPanel();

		jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
		jTabbedPane1.setFont(new java.awt.Font("Dialog", 0, 12));
		jTabbedPane1.addTab("All", downloadJobStatusTableAllPanel);

		jTabbedPane1.addTab("Running", downloadJobStatusTableRunningPanel);

		jTabbedPane1.addTab("Open", downloadJobStatusTableOpenPanel);

		jTabbedPane1.addTab("Finished", downloadJobStatusTableFinishedPanel);

		org.jdesktop.layout.GroupLayout infoPanelLayout = new org.jdesktop.layout.GroupLayout(
				infoPanel);
		infoPanel.setLayout(infoPanelLayout);
		infoPanelLayout.setHorizontalGroup(infoPanelLayout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING).add(0, 584,
				Short.MAX_VALUE));
		infoPanelLayout.setVerticalGroup(infoPanelLayout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING).add(0, 445,
				Short.MAX_VALUE));
		jTabbedPane1.addTab("Info", infoPanel);

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
				this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING).add(jTabbedPane1,
				org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 589,
				Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING).add(jTabbedPane1,
				org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 472,
				Short.MAX_VALUE));
	}// </editor-fold>//GEN-END:initComponents

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private de.phleisch.app.itsucks.gui2.panel.DownloadJobStatusTablePanel downloadJobStatusTableAllPanel;
	private de.phleisch.app.itsucks.gui2.panel.DownloadJobStatusTablePanel downloadJobStatusTableFinishedPanel;
	private de.phleisch.app.itsucks.gui2.panel.DownloadJobStatusTablePanel downloadJobStatusTableOpenPanel;
	private de.phleisch.app.itsucks.gui2.panel.DownloadJobStatusTablePanel downloadJobStatusTableRunningPanel;
	private javax.swing.JPanel infoPanel;
	private javax.swing.JTabbedPane jTabbedPane1;
	// End of variables declaration//GEN-END:variables

}